import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as t,c as o,a as n,b as l,d as c,e as s}from"./app-Cm7Y0yTG.js";const i={},r=s(`<h2 id="php" tabindex="-1"><a class="header-anchor" href="#php"><span>PHP</span></a></h2><ol><li>写一段代码保证多个进程同时写入成功</li></ol><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">#加锁</span>
<span class="token keyword">function</span> <span class="token function-definition function">write</span><span class="token punctuation">(</span><span class="token variable">$filepath</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span> <span class="token variable">$filepath</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;a&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//以追加的方式打开文件，返回的是指针</span>
 <span class="token keyword">do</span><span class="token punctuation">{</span>
 　　 <span class="token function">usleep</span><span class="token punctuation">(</span> <span class="token number">100</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 　　　　　　<span class="token comment">//暂停执行程序，参数是以微秒为单位的</span>
 <span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">flock</span><span class="token punctuation">(</span> <span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token constant">LOCK_EX</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>　　<span class="token comment">//以独享写入的方式锁定文件，成功则返回TRUE，否则FALSE</span>
<span class="token punctuation">}</span>
 <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">fwrite</span><span class="token punctuation">(</span> <span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;/n&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>　　<span class="token comment">// 以追加的方式写入数据到打开的文件</span>
 <span class="token function">flock</span><span class="token punctuation">(</span> <span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token constant">LOCK_UN</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>　　　　　　<span class="token comment">//解锁，以让别的进程进行锁定</span>
 <span class="token function">fcloce</span><span class="token punctuation">(</span> <span class="token variable">$fp</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>　　　　　　　　　　　<span class="token comment">//关闭打开的文件指针</span>
 <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span>　　　　　　　　　　　　<span class="token comment">//返回写入结果</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),u={href:"https://www.cnblogs.com/gengyi/p/6399206.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<ol start="2"><li>打出前一天的时间</li></ol><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d H:i:s&#39;</span><span class="token punctuation">,</span> <span class="token function">strtotime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;-1 day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>echo、print、print_r的 区别</li></ol><p>echo 是一个语法结构。用于输出基本变量信息。print是一个函数。有返回值。print_r是一个函数。一般用来打印复合类型信息。</p><ol start="4"><li>翻转字符【包含中文】</li></ol><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code> <span class="token keyword">function</span> <span class="token function-definition function">strRev</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$encoding</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
        <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token function">mb_strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token variable">$len</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token variable">$result</span> <span class="token operator">.=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token variable">$i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token variable">$encoding</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>遍历一个文件夹下的所有文件和子文件</li></ol><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">my_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>@<span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//注意这里要加一个@，不然会有warning错误提示：）</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;..&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//排除根目录；</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//如果是子文件夹，就进行递归</span>
                    <span class="token variable">$files</span><span class="token punctuation">[</span><span class="token variable">$file</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">my_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;/&quot;</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//不然就将文件的名字存入数组；</span>
                    <span class="token variable">$files</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
 
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$files</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>不适用第三个变量交换两个变量的值</li></ol><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">swap</span> <span class="token punctuation">(</span><span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token keyword type-declaration">int</span> <span class="token operator">&amp;</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token comment">// 20 10 </span>
    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token operator">+</span><span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token operator">-</span><span class="token variable">$b</span><span class="token punctuation">;</span> <span class="token comment">//20 a</span>
    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token operator">-</span><span class="token variable">$b</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>XSS、CSRF、SQL注入</li></ol><p>XSS 跨站脚本攻击。通常是由于没有过滤用户的输入导致的。</p><p>CSRF 跨站请求攻击。</p><p>SQL注入。用户的输入非法字符 和后端的sql组成了危险的sql语句</p><ol start="8"><li><p>PHP实现单例模式</p></li><li><p>MVC的认识</p></li><li><p>$_SERVER 常用字段的意思</p></li><li><p>cookie 和session之间的关系</p></li><li><p>GET和POST区别</p></li><li><p>接口和抽象类的区别</p></li><li><p>TCP/IP HTTP</p></li><li><p>进程、协程、线程</p></li><li><p>进程通信的方式</p></li><li><p>并发编程模型</p><ul><li>多进程</li><li>多线程</li><li>epoll</li></ul></li><li><p>epoll select poll区别</p></li><li><p>二维数组排序</p></li></ol><h2 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h2><p>linux计划任务</p><p>在每天凌晨1点运行 a.sh文件</p><p>0 1 * * * sh a.sh</p><p>每隔五分钟运行一次</p><p>5/* * * * * sh a.sh</p><p>每周一当前13：00每隔五分钟运行一次</p><p>5/* 13 * * 1 sh a.sh</p><p>每月的1号和15号每隔两个小时执行一次</p><p><code>* */2 1,15 * sh a.sh</code></p><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>mysql</span></a></h2><ol><li><strong>Myisam和innodb的差别</strong></li></ol><p>存储结构。myisam一个表，三个文件。结构、数据、索引</p><p>innodb 两个文件。索引、数据保持在一个文件。</p><p>innodb支持事务、myiam不支持</p><p>innodb支持外键、支持行锁</p><ol start="2"><li><strong>优化数据库的方法</strong></li></ol><ul><li>选择正确的存储引擎</li><li>选择合适的表字段类型</li><li>适当的增加索引</li><li>增加服务器的硬件</li><li>分库分表</li><li>读写分离</li></ul><ol start="2"><li><strong>数据库的事务</strong></li><li><strong>写出发帖数最多的十个人的名</strong></li></ol><p>posts(id,username,content) id帖子序号、username 用户名、content内容</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">as</span> ct <span class="token keyword">from</span> posts <span class="token keyword">group</span> <span class="token keyword">by</span> username <span class="token keyword">order</span> <span class="token keyword">by</span> ct <span class="token keyword">desc</span>  <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li><strong>有一个数据表user需要按 uid 10，32，22，76，13的顺序检索出来</strong></li></ol><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">10</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">32</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">22</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">22</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">76</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> uid  <span class="token operator">=</span><span class="token number">13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li><p>user表记录学生的信息。有uid，和name，subject表是科目。主要subject_name,subject_id. score表是记录学生各科的成绩，有uid,subject_id,score(分数)，example_id(学期)</p><ul><li><p>写出每个学生各科目的所有成绩的平均成绩</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">\`</span>score<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> uid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查出科目id为10的，所有平均分排名前十的学生</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>score<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">as</span> avg_number <span class="token keyword">from</span> score <span class="token keyword">group</span> <span class="token keyword">by</span> uid subject_id <span class="token keyword">having</span> <span class="token punctuation">(</span>subject_id <span class="token operator">=</span><span class="token number">10</span> <span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>平均成绩大于300的学生的学号</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>score<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">as</span> avg_number<span class="token punctuation">,</span>uid <span class="token keyword">from</span> score <span class="token keyword">where</span> avg_number <span class="token operator">&gt;</span> <span class="token number">300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>mysql 查询一个数据库中的所有的表名</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> table_name 
<span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> 
<span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">&#39;当前数据库&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mysql 日期函数</p></li></ol><h2 id="算法" tabindex="-1"><a class="header-anchor" href="#算法"><span>算法</span></a></h2><ul><li>翻转数组</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * 反转数组
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$arr</span> 
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">array</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">reverse</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$n</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$left</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token variable">$right</span> <span class="token operator">=</span> <span class="token variable">$n</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$left</span> <span class="token operator">&lt;</span> <span class="token variable">$right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$left</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$left</span><span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$right</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$right</span><span class="token operator">--</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$arr</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>约瑟夫环</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">yuesefu</span><span class="token punctuation">(</span><span class="token variable">$n</span><span class="token punctuation">,</span><span class="token variable">$m</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token variable">$r</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;=</span><span class="token variable">$n</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$r</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token variable">$r</span><span class="token operator">+</span><span class="token variable">$m</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token variable">$i</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$r</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>二分查找【如何在有序的数组中找到一个数的位置】</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
 * 二分查找
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">array</span></span> <span class="token parameter">$array</span> 数组
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$n</span> 数组数量
 * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">int</span></span> <span class="token parameter">$value</span> 要寻找的值
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">int</span></span>
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">binary_search</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token variable">$n</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$left</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token variable">$right</span> <span class="token operator">=</span> <span class="token variable">$n</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$left</span> <span class="token operator">&lt;=</span> <span class="token variable">$right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$mid</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$left</span> <span class="token operator">+</span> <span class="token variable">$right</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">&gt;</span> <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token variable">$mid</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$right</span> <span class="token operator">=</span> <span class="token variable">$mid</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$value</span> <span class="token operator">&lt;</span> <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token variable">$mid</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$left</span> <span class="token operator">=</span> <span class="token variable">$mid</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$mid</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>REDIS</span></a></h2><p>Memcache 该产品本身特别是数据在内存里边的存储，如果服务器突然断电，则全部数据就会丢失 单个key（变量）存放的数据有1M的限制 存储数据的类型都是String字符串类型 本身没有持久化功能 可以使用多核（多线程） Redis 数据类型比较丰富:String、List、Set、Sortedset、Hash 有持久化功能，可以把数据随时存储在磁盘上 本身有一定的计算功能 单个key（变量）存放的数据有1GB的限制</p>`,48);function d(v,m){const a=e("ExternalLinkIcon");return t(),o("div",null,[r,n("p",null,[n("a",u,[l("https://www.cnblogs.com/gengyi/p/6399206.html"),c(a)])]),k])}const f=p(i,[["render",d],["__file","笔试题3.html.vue"]]),g=JSON.parse(`{"path":"/interview/interview_qa/%E7%AC%94%E8%AF%95%E9%A2%983.html","title":"","lang":"en-US","frontmatter":{"icon":"home","toc":true,"sidebar":false,"breadcrumb":false},"headers":[{"level":2,"title":"PHP","slug":"php","link":"#php","children":[]},{"level":2,"title":"Linux","slug":"linux","link":"#linux","children":[]},{"level":2,"title":"mysql","slug":"mysql","link":"#mysql","children":[]},{"level":2,"title":"算法","slug":"算法","link":"#算法","children":[]},{"level":2,"title":"REDIS","slug":"redis","link":"#redis","children":[]}],"git":{"createdTime":1729172701000,"updatedTime":1729172701000,"contributors":[{"name":"leiping","email":"leiping@91cyt.com","commits":1}]},"readingTime":{"minutes":4.61,"words":1384},"filePathRelative":"interview/interview_qa/笔试题3.md","localizedDate":"October 17, 2024","excerpt":"<h2>PHP</h2>\\n<ol>\\n<li>写一段代码保证多个进程同时写入成功</li>\\n</ol>\\n<div class=\\"language-php\\" data-ext=\\"php\\" data-title=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token comment\\">#加锁</span>\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function-definition function\\">write</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$filepath</span><span class=\\"token punctuation\\">,</span><span class=\\"token variable\\">$data</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n     <span class=\\"token variable\\">$fp</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fopen</span><span class=\\"token punctuation\\">(</span> <span class=\\"token variable\\">$filepath</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string single-quoted-string\\">'a'</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>   <span class=\\"token comment\\">//以追加的方式打开文件，返回的是指针</span>\\n <span class=\\"token keyword\\">do</span><span class=\\"token punctuation\\">{</span>\\n 　　 <span class=\\"token function\\">usleep</span><span class=\\"token punctuation\\">(</span> <span class=\\"token number\\">100</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> 　　　　　　<span class=\\"token comment\\">//暂停执行程序，参数是以微秒为单位的</span>\\n <span class=\\"token punctuation\\">}</span><span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span> <span class=\\"token operator\\">!</span><span class=\\"token function\\">flock</span><span class=\\"token punctuation\\">(</span> <span class=\\"token variable\\">$fp</span><span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">LOCK_EX</span> <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>　　<span class=\\"token comment\\">//以独享写入的方式锁定文件，成功则返回TRUE，否则FALSE</span>\\n<span class=\\"token punctuation\\">}</span>\\n <span class=\\"token variable\\">$res</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">fwrite</span><span class=\\"token punctuation\\">(</span> <span class=\\"token variable\\">$fp</span><span class=\\"token punctuation\\">,</span> <span class=\\"token variable\\">$data</span><span class=\\"token operator\\">.</span><span class=\\"token string double-quoted-string\\">\\"/n\\"</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>　　<span class=\\"token comment\\">// 以追加的方式写入数据到打开的文件</span>\\n <span class=\\"token function\\">flock</span><span class=\\"token punctuation\\">(</span> <span class=\\"token variable\\">$fp</span><span class=\\"token punctuation\\">,</span> <span class=\\"token constant\\">LOCK_UN</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>　　　　　　<span class=\\"token comment\\">//解锁，以让别的进程进行锁定</span>\\n <span class=\\"token function\\">fcloce</span><span class=\\"token punctuation\\">(</span> <span class=\\"token variable\\">$fp</span> <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>　　　　　　　　　　　<span class=\\"token comment\\">//关闭打开的文件指针</span>\\n <span class=\\"token keyword\\">return</span> <span class=\\"token variable\\">$res</span><span class=\\"token punctuation\\">;</span>　　　　　　　　　　　　<span class=\\"token comment\\">//返回写入结果</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>"}`);export{f as comp,g as data};
