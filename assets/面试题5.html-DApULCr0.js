import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-dp-5049H.js";const e={},p=t('<p>今天去参加了一个面试，然后总共就4个题目，记录下，给大家一点启发。</p><h3 id="_1-查询订单表-order-中-累计支付金额大于200的用户" tabindex="-1"><a class="header-anchor" href="#_1-查询订单表-order-中-累计支付金额大于200的用户"><span>1. 查询订单表(order)中，累计支付金额大于200的用户</span></a></h3><table><thead><tr><th style="text-align:left;">uid</th><th style="text-align:left;">amount</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">10</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">10</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">sum</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">as</span> ct<span class="token punctuation">,</span>uid <span class="token keyword">from</span> orders <span class="token keyword">group</span> <span class="token keyword">by</span> uid <span class="token keyword">having</span> ct <span class="token operator">&gt;</span> <span class="token number">200</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-查询一个表中的重叠数据。" tabindex="-1"><a class="header-anchor" href="#_2-查询一个表中的重叠数据。"><span>2. 查询一个表中的重叠数据。</span></a></h3><table><thead><tr><th>id</th><th>uid</th><th>start</th><th>end</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>2020-02-01</td><td>2020-03-01</td></tr><tr><td>2</td><td>1</td><td>2020-02-04</td><td>2020-04-03</td></tr><tr><td>3</td><td>2</td><td>2020-01-01</td><td>2020-02-01</td></tr><tr><td>4</td><td>2</td><td>2020-02-02</td><td>2020-05-01</td></tr></tbody></table><p>解释： 在上述表中，<code>uid=1</code>的记录 在时间段上有重叠, id=1的记录和<code>2020-02-01</code> - <code>2020-03-01</code> 和 id = 2的记录 <code>2020-02-04</code> - <code>2020-04-03</code>。 写一个sql实现，找出找个重叠的两条数据。</p><ul><li>利用自联结</li><li>出现重叠数据一条记录的开始时间落在的另外一条记录的start和end之间</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>\n	a<span class="token punctuation">.</span>uid<span class="token punctuation">,</span>\n	a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> a_start<span class="token punctuation">,</span>\n	b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> b_start<span class="token punctuation">,</span>\n	a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>end<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> a_end<span class="token punctuation">,</span>\n	b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>end<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> b_end\n<span class="token keyword">FROM</span>\n	log <span class="token keyword">AS</span> a\n<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> log <span class="token keyword">AS</span> b <span class="token keyword">ON</span> a<span class="token punctuation">.</span>uid <span class="token operator">=</span> b<span class="token punctuation">.</span>uid\n<span class="token keyword">WHERE</span>\n	a<span class="token punctuation">.</span>id <span class="token operator">&lt;&gt;</span> b<span class="token punctuation">.</span>id\n<span class="token operator">AND</span> <span class="token punctuation">(</span>\n	<span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&gt;</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&lt;</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>end<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&gt;</span> a<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&amp;&amp;</span> b<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>start<span class="token punctuation">`</span></span> <span class="token operator">&lt;</span> a<span class="token punctuation">.</span><span class="token keyword">end</span> <span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n<span class="token keyword">ORDER</span> <span class="token keyword">BY</span>\n	a<span class="token punctuation">.</span>id <span class="token keyword">ASC</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-实现一个函数-判断给定的字符串是不是合法" tabindex="-1"><a class="header-anchor" href="#_3-实现一个函数-判断给定的字符串是不是合法"><span>3. 实现一个函数，判断给定的字符串是不是合法？</span></a></h3><pre><code>```php\nfunction isEmail(array $string): bool {\n\n}\n```\n</code></pre><ol><li>假设给定的字符串是一个字符数组 <code>[&#39;a&#39;,&#39;b&#39;....]</code></li><li>不允许使用正则表达式</li><li>你只能使用以下三个函数 <code>empty</code>、<code>foreach</code>、<code>array_shift</code></li><li>假定给定的字符中只有<strong>小写字母[a-z]</strong>、<strong>@</strong>、<strong>.</strong> 这三种字符 正确的邮箱：<code>test@test.com</code> 不是邮箱的字符：<code>@.</code>、<code>.@</code>、<code>@@</code>、<code>a@test.cc.c</code>、<code>aac@..a</code></li></ol><h3 id="_4-防止超卖" tabindex="-1"><a class="header-anchor" href="#_4-防止超卖"><span>4. 防止超卖</span></a></h3><p>商品表(goods)</p><ul><li><p>good_id 商品id</p></li><li><p>num 库存 | good_id | num | | ------------ | ------------ | | 1 | 1 |</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//加锁</span>\n<span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;update goods set num = num -1 where goods_id =1&quot;</span><span class="token punctuation">)</span>\n<span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>上面的代码有啥问题？，如何解决？</p>',16),o=[p];function l(c,i){return s(),a("div",null,o)}const u=n(e,[["render",l],["__file","面试题5.html.vue"]]),k=JSON.parse('{"path":"/interview/interview_qa/%E9%9D%A2%E8%AF%95%E9%A2%985.html","title":"","lang":"en-US","frontmatter":{"icon":"home","toc":true,"sidebar":false,"breadcrumb":false},"headers":[{"level":3,"title":"1. 查询订单表(order)中，累计支付金额大于200的用户","slug":"_1-查询订单表-order-中-累计支付金额大于200的用户","link":"#_1-查询订单表-order-中-累计支付金额大于200的用户","children":[]},{"level":3,"title":"2. 查询一个表中的重叠数据。","slug":"_2-查询一个表中的重叠数据。","link":"#_2-查询一个表中的重叠数据。","children":[]},{"level":3,"title":"3. 实现一个函数，判断给定的字符串是不是合法？","slug":"_3-实现一个函数-判断给定的字符串是不是合法","link":"#_3-实现一个函数-判断给定的字符串是不是合法","children":[]},{"level":3,"title":"4. 防止超卖","slug":"_4-防止超卖","link":"#_4-防止超卖","children":[]}],"git":{"createdTime":1729172701000,"updatedTime":1729172701000,"contributors":[{"name":"leiping","email":"leiping@91cyt.com","commits":1}]},"readingTime":{"minutes":1.57,"words":470},"filePathRelative":"interview/interview_qa/面试题5.md","localizedDate":"October 17, 2024","excerpt":"<p>今天去参加了一个面试，然后总共就4个题目，记录下，给大家一点启发。</p>\\n<h3>1. 查询订单表(order)中，累计支付金额大于200的用户</h3>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">uid</th>\\n<th style=\\"text-align:left\\">amount</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\">1</td>\\n<td style=\\"text-align:left\\">10</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">2</td>\\n<td style=\\"text-align:left\\">10</td>\\n</tr>\\n</tbody>\\n</table>"}');export{u as comp,k as data};
