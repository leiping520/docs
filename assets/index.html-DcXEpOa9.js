import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as i,e as a}from"./app-CKCHfEPj.js";const n={},c=a(`<h2 id="_1-使用docker镜像" tabindex="-1"><a class="header-anchor" href="#_1-使用docker镜像"><span>1.使用Docker镜像</span></a></h2><ul><li><p>Docker 运行容器前需要本地存在对应的镜像，如果本地不存在该镜像，Docker 会从镜像仓库下载该镜像。</p></li><li><p>本章将介绍更多关于镜像的内容，包括：</p><ul><li>从仓库获取镜像；</li><li>管理本地主机上的镜像；</li><li>介绍镜像实现的基本原理。</li></ul></li></ul><h2 id="_2-获取镜像" tabindex="-1"><a class="header-anchor" href="#_2-获取镜像"><span>2.获取镜像</span></a></h2><ul><li>从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式为：</li></ul><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code>$ docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>具体的选项可以通过 docker pull --help 命令看到，这里我们说一下镜像名称的格式。</p><h2 id="_3-列出镜像" tabindex="-1"><a class="header-anchor" href="#_3-列出镜像"><span>3.列出镜像</span></a></h2><h2 id="_4-删除本地镜像" tabindex="-1"><a class="header-anchor" href="#_4-删除本地镜像"><span>4.删除本地镜像</span></a></h2><h2 id="_5-利用commit理解镜像构成" tabindex="-1"><a class="header-anchor" href="#_5-利用commit理解镜像构成"><span>5.利用commit理解镜像构成</span></a></h2><h2 id="_6-其他制作镜像的方式" tabindex="-1"><a class="header-anchor" href="#_6-其他制作镜像的方式"><span>6.其他制作镜像的方式</span></a></h2><h2 id="_7-镜像的实现原理" tabindex="-1"><a class="header-anchor" href="#_7-镜像的实现原理"><span>7.镜像的实现原理</span></a></h2>`,11),r=[c];function d(t,o){return l(),i("div",null,r)}const p=e(n,[["render",d],["__file","index.html.vue"]]),_=JSON.parse('{"path":"/docker/images/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"1.使用Docker镜像","slug":"_1-使用docker镜像","link":"#_1-使用docker镜像","children":[]},{"level":2,"title":"2.获取镜像","slug":"_2-获取镜像","link":"#_2-获取镜像","children":[]},{"level":2,"title":"3.列出镜像","slug":"_3-列出镜像","link":"#_3-列出镜像","children":[]},{"level":2,"title":"4.删除本地镜像","slug":"_4-删除本地镜像","link":"#_4-删除本地镜像","children":[]},{"level":2,"title":"5.利用commit理解镜像构成","slug":"_5-利用commit理解镜像构成","link":"#_5-利用commit理解镜像构成","children":[]},{"level":2,"title":"6.其他制作镜像的方式","slug":"_6-其他制作镜像的方式","link":"#_6-其他制作镜像的方式","children":[]},{"level":2,"title":"7.镜像的实现原理","slug":"_7-镜像的实现原理","link":"#_7-镜像的实现原理","children":[]}],"git":{"createdTime":1728834120000,"updatedTime":1728834120000,"contributors":[{"name":"leiping","email":"leiping@91cyt.com","commits":1}]},"readingTime":{"minutes":0.68,"words":204},"filePathRelative":"docker/images/README.md","localizedDate":"October 13, 2024","excerpt":"<h2>1.使用Docker镜像</h2>\\n<ul>\\n<li>\\n<p>Docker 运行容器前需要本地存在对应的镜像，如果本地不存在该镜像，Docker 会从镜像仓库下载该镜像。</p>\\n</li>\\n<li>\\n<p>本章将介绍更多关于镜像的内容，包括：</p>\\n<ul>\\n<li>从仓库获取镜像；</li>\\n<li>管理本地主机上的镜像；</li>\\n<li>介绍镜像实现的基本原理。</li>\\n</ul>\\n</li>\\n</ul>\\n<h2>2.获取镜像</h2>\\n<ul>\\n<li>从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式为：</li>\\n</ul>\\n<div class=\\"language-docker\\" data-ext=\\"docker\\" data-title=\\"docker\\"><pre class=\\"language-docker\\"><code>$ docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]\\n</code></pre></div>"}');export{p as comp,_ as data};
