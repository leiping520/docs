import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as o,d as c}from"./app-BWSqF5wm.js";const r={},n=c(`<p>格式:</p><ul><li><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;源文件路径&gt; &lt;目标文件路径&gt;</code></li><li><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [&quot;&lt;源文件路径1&gt;&quot;,...,&quot;&lt;目标文件路径&gt;&quot;]</code></li></ul><p>和<code>RUN</code>指令一样，也有两种格式，一种类似命令行，一种类似于函数调用。</p><p><code>COPY</code>指令将从构建上下文目录中<code>&lt;源路径&gt;</code>的文件或目录复制到新的一层的镜像内的<code>&lt;目标路径&gt;</code>位置。比如:</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">COPY</span> package.json /usr/src/app/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>&lt;源路径&gt;</code>可以是多个文件或目录, 也可以是<code>&lt;通配符&gt;</code>, 其通配符。</p>`,6),d=[n];function l(i,p){return t(),o("div",null,d)}const g=e(r,[["render",l],["__file","copy.html.vue"]]),u=JSON.parse('{"path":"/docker/dockfile/copy.html","title":"","lang":"zh-CN","frontmatter":{"description":"格式: COPY [--chown=<user>:<group>] <源文件路径> <目标文件路径> COPY [--chown=<user>:<group>] [\\"<源文件路径1>\\",...,\\"<目标文件路径>\\"] 和RUN指令一样，也有两种格式，一种类似命令行，一种类似于函数调用。 COPY指令将从构建上下文目录中<源路径>的文件或目录复制到新的一...","head":[["meta",{"property":"og:url","content":"https://leiping520.github.io/docs/docker/dockfile/copy.html"}],["meta",{"property":"og:site_name","content":"悟空"}],["meta",{"property":"og:description","content":"格式: COPY [--chown=<user>:<group>] <源文件路径> <目标文件路径> COPY [--chown=<user>:<group>] [\\"<源文件路径1>\\",...,\\"<目标文件路径>\\"] 和RUN指令一样，也有两种格式，一种类似命令行，一种类似于函数调用。 COPY指令将从构建上下文目录中<源路径>的文件或目录复制到新的一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-02T04:07:00.000Z"}],["meta",{"property":"article:author","content":"George"}],["meta",{"property":"article:modified_time","content":"2024-03-02T04:07:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-02T04:07:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"George\\",\\"url\\":\\"https://leiping520.github.io/docs/\\"}]}"]]},"headers":[],"git":{"createdTime":1709352420000,"updatedTime":1709352420000,"contributors":[{"name":"George","email":"leiping@yunxianginvest.com","commits":1}]},"readingTime":{"minutes":0.44,"words":132},"filePathRelative":"docker/dockfile/copy.md","localizedDate":"2024年3月2日","excerpt":"<p>格式:</p>\\n<ul>\\n<li><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;源文件路径&gt; &lt;目标文件路径&gt;</code></li>\\n<li><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] [\\"&lt;源文件路径1&gt;\\",...,\\"&lt;目标文件路径&gt;\\"]</code></li>\\n</ul>\\n<p>和<code>RUN</code>指令一样，也有两种格式，一种类似命令行，一种类似于函数调用。</p>\\n<p><code>COPY</code>指令将从构建上下文目录中<code>&lt;源路径&gt;</code>的文件或目录复制到新的一层的镜像内的<code>&lt;目标路径&gt;</code>位置。比如:</p>","autoDesc":true}');export{g as comp,u as data};
