import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as t,e as s}from"./app--W1IOfvN.js";const a={},c=s(`<ul><li>1.<a href="#%E7%AE%80%E4%BB%8B">简介</a></li><li>2.<a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0">命令行参数</a></li></ul><h3 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介<a id="简介"></a></span></a></h3><p><code>tsc</code> 是 <code>TypeScript</code> 官方的命令行编译器，用来检查代码，并将其编译成 <code>JavaScript</code> 代码。</p><p><code>tsc</code> 默认使用当前目录下的配置文件 <code>tsconfig.json</code>，但也可以接受独立的命令行参数。命令行参数会覆盖 <code>tsconfig.json</code>，比如命令行指定了所要编译的文件，那么 <code>tsc</code> 就会忽略 <code>tsconfig.json</code> 的 <code>files</code> 属性。</p><p><code>tsc</code> 的基本用法如下。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 使用 tsconfig.json 的配置</span>
$ tsc

<span class="token comment"># 只编译 index.ts</span>
$ tsc index.ts

<span class="token comment"># 编译 src 目录的所有 .ts 文件</span>
$ tsc src/*.ts

<span class="token comment"># 指定编译配置文件</span>
$ tsc <span class="token parameter variable">--project</span> tsconfig.production.json

<span class="token comment"># 只生成类型声明文件，不编译出 js 文件</span>
$ tsc indx.js <span class="token parameter variable">--declaration</span> <span class="token parameter variable">--emitDeclarationOnly</span>

<span class="token comment"># 多个 ts 文件编译成单个 js 文件</span>
$ tsc app.ts util.ts <span class="token parameter variable">--target</span> esnext <span class="token parameter variable">--outfile</span> app.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数<a id="命令行参数"></a></span></a></h3><p><code>tsc</code> 的命令行参数，大部分与 <code>tsconfig.json</code> 的属性一一对应。</p><p>下面只是按照首字母排序，简单罗列出主要的一些参数，详细解释可以参考《tsconfig.json 配置文件》一章。</p>`,9),i=[c];function o(r,d){return n(),t("div",null,i)}const m=e(a,[["render",o],["__file","tsc.html.vue"]]),v=JSON.parse('{"path":"/frontend/typescript/tsc.html","title":"","lang":"en-US","frontmatter":{"description":"1.简介 2.命令行参数 简介 tsc 是 TypeScript 官方的命令行编译器，用来检查代码，并将其编译成 JavaScript 代码。 tsc 默认使用当前目录下的配置文件 tsconfig.json，但也可以接受独立的命令行参数。命令行参数会覆盖 tsconfig.json，比如命令行指定了所要编译的文件，那么 tsc 就会忽略 tsconf...","head":[["meta",{"property":"og:url","content":"https://leiping520.github.io/docs/frontend/typescript/tsc.html"}],["meta",{"property":"og:description","content":"1.简介 2.命令行参数 简介 tsc 是 TypeScript 官方的命令行编译器，用来检查代码，并将其编译成 JavaScript 代码。 tsc 默认使用当前目录下的配置文件 tsconfig.json，但也可以接受独立的命令行参数。命令行参数会覆盖 tsconfig.json，比如命令行指定了所要编译的文件，那么 tsc 就会忽略 tsconf..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-03-15T09:32:04.000Z"}],["meta",{"property":"article:author","content":"George"}],["meta",{"property":"article:modified_time","content":"2024-03-15T09:32:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-15T09:32:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"George\\",\\"url\\":\\"https://leiping520.github.io/docs/\\"}]}"]]},"headers":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"命令行参数","slug":"命令行参数","link":"#命令行参数","children":[]}],"git":{"createdTime":1710495124000,"updatedTime":1710495124000,"contributors":[{"name":"George","email":"leiping@yunxianginvest.com","commits":1}]},"readingTime":{"minutes":0.91,"words":273},"filePathRelative":"frontend/typescript/tsc.md","localizedDate":"March 15, 2024","excerpt":"<ul>\\n<li>1.<a href=\\"#%E7%AE%80%E4%BB%8B\\">简介</a></li>\\n<li>2.<a href=\\"#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0\\">命令行参数</a></li>\\n</ul>\\n<h3><a class=\\"header-anchor\\" href=\\"#简介\\"><span>简介</span></a><a id=\\"简介\\"></a></h3>\\n<p><code>tsc</code> 是 <code>TypeScript</code> 官方的命令行编译器，用来检查代码，并将其编译成 <code>JavaScript</code> 代码。</p>","autoDesc":true}');export{m as comp,v as data};
