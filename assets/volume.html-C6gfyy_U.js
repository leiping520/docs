import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c as d,e as t}from"./app-SMzT8O0c.js";const c={},a=t(`<p>格式为：</p><ul><li><code>VOLUME [&quot;&lt;路径1&gt;&quot;, &quot;&lt;路径2&gt;&quot;...]</code></li><li><code>VOLUME &lt;路径1&gt;</code></li></ul><p>之前我们说过，容器运行时应该尽量保持容器存储层不发生写操作，对于数据库类需要保存动态数据的应用，其数据库文件应该保存于卷（volume）中，后面的章节我们会进一步介绍Docker卷的概念。为了防止运行时用户忘记将动态文件所保存目录挂载为卷，在Dockerfile中，我们可以事先指定某些目录挂载为匿名卷，这样在运行时如果用户不指定挂载目录，这些目录会自动挂载为匿名卷，其应用也可以正常运行，不会向容器存储层写入任何数据。</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">VOLUME</span> /data</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里的<code>/data</code>目录就会在容器运行时被挂载为匿名卷，即使用户没有使用<code>-v</code>指定挂载目录。任何向<code>/data</code>目录中写入的数据，均会被保存在卷中，而不是容器存储层。从而保证了容器存储层的无状态化。当然，运行容器时可以覆盖这个挂载设置。比如：</p><div class="language-docker line-numbers-mode" data-ext="docker" data-title="docker"><pre class="language-docker"><code>$ docker run -d -v /mydata:/data ubuntu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在这行命令中，就使用了<code>mydata</code>这个命名卷挂载到了<code>/data</code>这个位置，替代了<code>Dockerfile</code>中声明的匿名卷挂载。</p>`,7),l=[a];function i(n,r){return o(),d("div",null,l)}const m=e(c,[["render",i],["__file","volume.html.vue"]]),p=JSON.parse('{"path":"/docker/dockfile/volume.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"createdTime":1709890332000,"updatedTime":1709890332000,"contributors":[{"name":"George","email":"leiping@yunxianginvest.com","commits":1}]},"readingTime":{"minutes":1.13,"words":339},"filePathRelative":"docker/dockfile/volume.md","localizedDate":"March 8, 2024","excerpt":"<p>格式为：</p>\\n<ul>\\n<li><code>VOLUME [\\"&lt;路径1&gt;\\", \\"&lt;路径2&gt;\\"...]</code></li>\\n<li><code>VOLUME &lt;路径1&gt;</code></li>\\n</ul>\\n<p>之前我们说过，容器运行时应该尽量保持容器存储层不发生写操作，对于数据库类需要保存动态数据的应用，其数据库文件应该保存于卷（volume）中，后面的章节我们会进一步介绍Docker卷的概念。为了防止运行时用户忘记将动态文件所保存目录挂载为卷，在Dockerfile中，我们可以事先指定某些目录挂载为匿名卷，这样在运行时如果用户不指定挂载目录，这些目录会自动挂载为匿名卷，其应用也可以正常运行，不会向容器存储层写入任何数据。</p>"}');export{m as comp,p as data};
