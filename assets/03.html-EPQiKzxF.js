import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as i,a as n,b as a,d as l,e as o}from"./app-B5VpVzJG.js";const r={},c=o(`<h1 id="echo、print、print-r、var-dump-区别" tabindex="-1"><a class="header-anchor" href="#echo、print、print-r、var-dump-区别"><span>echo、print、print_r、var_dump 区别</span></a></h1><h2 id="echo" tabindex="-1"><a class="header-anchor" href="#echo"><span>echo</span></a></h2><ul><li>输出单个或多个字符，多个使用逗号分隔</li><li>无返回值</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;String 1&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;String 2&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="print" tabindex="-1"><a class="header-anchor" href="#print"><span>print</span></a></h2><ul><li>只可以输出单个字符</li><li>返回<code>1</code>，因此可用于表达式</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$expr</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">print</span> <span class="token string double-quoted-string">&quot;foo&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="print-r" tabindex="-1"><a class="header-anchor" href="#print-r"><span>print_r</span></a></h2><ul><li>输出关于变量的易于理解的信息</li><li>支持多种数据类型，包括字符、数组、对象，格式化成易读格式</li><li>在调试时非常有用</li><li>若设置第二个参数，可将输出值返回(而不直接输出)</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
	<span class="token string single-quoted-string">&#39;m&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;monkey&#39;</span><span class="token punctuation">,</span>
	<span class="token string single-quoted-string">&#39;foo&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span>
	<span class="token string single-quoted-string">&#39;x&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;z&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$results</span> <span class="token operator">=</span> <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//$results 包含了 print_r 的输出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="var-dump" tabindex="-1"><a class="header-anchor" href="#var-dump"><span>var_dump</span></a></h2><ul><li>输出关于变量的易于理解的信息，多个可用分号分隔</li><li>支持多种数据类型，包括字符、数组、对象，格式化成易读格式</li><li>输出格式与<code>print_r</code>不同，<code>var_dump</code>的输出包含<code>数据类型</code></li><li>在调试时非常有用</li><li>无返回值</li></ul><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><ul><li>即使<code>print</code>可用于表达式，但这种用法，常常不利于代码可读性，与其他操作符混用容易让人误解</li><li><code>echo</code>和<code>print</code>都是语言结构，<code>print_r</code>和<code>var_dump</code>是普通函数。<code>echo</code>或<code>print</code>使用时，不需要使用括号将变量括起来</li></ul>`,14),d={href:"https://blog.maplemark.cn/2019/04/echo-print-print_r-var_dump%E5%8C%BA%E5%88%AB.html",target:"_blank",rel:"noopener noreferrer"};function u(h,g){const s=t("ExternalLinkIcon");return p(),i("div",null,[c,n("p",null,[n("strong",null,[a("《echo、print、print_r、var_dump区别》 原文链接："),n("a",d,[a("https://blog.maplemark.cn/2019/04/echo-print-print_r-var_dump区别.html"),l(s)])])])])}const v=e(r,[["render",u],["__file","03.html.vue"]]),b=JSON.parse('{"path":"/interview/php/03.html","title":"echo、print、print_r、var_dump 区别","lang":"en-US","frontmatter":{"icon":"home","toc":true,"sidebar":false,"breadcrumb":false},"headers":[{"level":2,"title":"echo","slug":"echo","link":"#echo","children":[]},{"level":2,"title":"print","slug":"print","link":"#print","children":[]},{"level":2,"title":"print_r","slug":"print-r","link":"#print-r","children":[]},{"level":2,"title":"var_dump","slug":"var-dump","link":"#var-dump","children":[]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[]}],"git":{"createdTime":1729096406000,"updatedTime":1729096406000,"contributors":[{"name":"leiping","email":"leiping@91cyt.com","commits":1}]},"readingTime":{"minutes":1.23,"words":368},"filePathRelative":"interview/php/03.md","localizedDate":"October 16, 2024","excerpt":"\\n<h2>echo</h2>\\n<ul>\\n<li>输出单个或多个字符，多个使用逗号分隔</li>\\n<li>无返回值</li>\\n</ul>\\n<div class=\\"language-php\\" data-ext=\\"php\\" data-title=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token keyword\\">echo</span> <span class=\\"token string double-quoted-string\\">\\"String 1\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string double-quoted-string\\">\\"String 2\\"</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}');export{v as comp,b as data};
